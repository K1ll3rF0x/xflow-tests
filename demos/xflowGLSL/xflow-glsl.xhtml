<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <!-- Style -->
    <link rel="stylesheet" type="text/css" media="all" href="../../style/page.css"/>

    <!-- Scripts -->
    <script type="text/javascript" src="../deps/xml3d.js"></script>
    <script type="text/javascript" src="../deps/xml3d-camera.js"></script>
    <script type="text/javascript" src="../deps/jquery-1.10.2.min.js"></script>


    <title>XML3D Examples</title>

    <script id="shader-fsinv" type="x-shader/x-fragment">
      #ifdef GL_ES
      precision mediump float;
      #endif

	  varying vec2 vTextureCoord;
	  varying vec4 vPosition;

      uniform sampler2D uSampler;

      void main(void) {
		gl_FragColor = texture2D(uSampler, vTextureCoord);
		gl_FragColor = vec4(1.0 - gl_FragColor.rgb, gl_FragColor.a);
      }
    </script>

    <script id="shader-fs" type="x-shader/x-fragment">
      #ifdef GL_ES
	  precision highp float;
	  #endif

	  varying highp vec2 vTextureCoord;

      uniform sampler2D uSampler;

      void main(void) {

		// Convert to grayscale
		vec3 color = texture2D(uSampler, vTextureCoord).rgb;
		float gray = (color.r + color.g + color.b) / 3.0;
		vec3 grayscale = vec3(gray);

		gl_FragColor = vec4(grayscale, 1.0);
      }
    </script>

    <!-- Vertex shader program -->

    <script id="shader-vs" type="x-shader/x-vertex">
      attribute vec3 aVertexPosition;
      attribute vec2 aTextureCoord;

      uniform mat4 uMVMatrix;
      uniform mat4 uPMatrix;

      varying highp vec2 vTextureCoord;

      void main(void) {
        gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
        vTextureCoord = aTextureCoord;
      }
    </script>

</head>
<body>
<div id="overall">
    <div id="content">
        <h1>
            GLSL modified Xflow operators
        </h1>

        <xml3d id="myxml3d" class="xml3d"
               xmlns="http://www.xml3d.org/2009/xml3d">
            <defs id="mainDef">


                <data id="images" compute="invert = xflow.glInvert(grayscale)">
                    <data id="images" compute="grayscale = xflow.glDesaturate(image)">
                        <texture name="image">
                            <img id="srcimg" src="../assets/water.gif" style="display:none"/>
                        </texture>
                    </data>
                </data>


                <shader id="texture1" script="urn:xml3d:shader:phong">
                    <float3 name="diffuseColor">1.5 1.5 1.5</float3>
                    <float name="ambientIntensity">1.0</float>
                    <data src="#images" filter="rename({diffuseTexture:image})"/>
                </shader>

                <shader id="texture2" script="urn:xml3d:shader:phong">
                    <float3 name="diffuseColor">1.5 1.5 1.5</float3>
                    <float name="ambientIntensity">1.0</float>
                    <data src="#images" filter="rename({diffuseTexture:grayscale})"/>
                </shader>

                <shader id="texture3" script="urn:xml3d:shader:phong">
                    <float3 name="diffuseColor">1.5 1.5 1.5</float3>
                    <float name="ambientIntensity">1.0</float>
                    <data src="#images" filter="rename({diffuseTexture:invert})"/>
                </shader>

                <!--<shader id="texture3" script="urn:xml3d:shader:phongvs">-->
                <!--<float3 name="diffuseColor">1.5 1.5 1.5</float3>-->
                <!--<float name="ambientIntensity">1.0</float>-->
                <!--<texture name="diffuseTexture">-->
                <!--<video src="./Firefox.ogv" />-->
                <!--</texture>-->
                <!--</shader>-->

                <data id="mySimpleMesh" type="triangles">
                    <int name="index">0 1 2 1 2 3</int>
                    <float3 name="position">-1.0 -1.0 0.0 1.0 -1.0 0.0 -1.0 1.0 0.0 1.0 1.0 0.0</float3>
                    <float3 name="normal">0.0 0.0 1.0 0.0 0.0 1.0 0.0 0.0 1.0 0.0 0.0 1.0</float3>
                    <float2 name="texcoord">0.0 0.0 1.0 0.0 0.0 1.0 1.0 1.0</float2>
                </data>

                <transform id="T1" translation="-2.2 0 0"/>
                <transform id="T2" translation="0 0 0"/>
                <transform id="T3" translation="2.2 0 0"/>

            </defs>
            <group shader="#texture1" transform="#T1">
                <mesh src="#mySimpleMesh"/>
            </group>
            <group shader="#texture2" transform="#T2">
                <mesh src="#mySimpleMesh"/>
            </group>
            <group shader="#texture3" transform="#T3">
                <mesh src="#mySimpleMesh"/>
            </group>


            <view id="Camera"
                  orientation="0.0 -1.0 0.0 0"
                  position="0.0 0.0 10.0"/>

        </xml3d>

        <!--<img id="srcimg" src="water.gif" style="display:none;" onload="setupCanvas ();"></img>-->
        <canvas id="canvasImg" width='256' height='256'></canvas>
        <canvas id="canvasTest" width='256' height='256'></canvas>
        <div id="output"></div>

        <script type="text/javascript" src="sylvester.js"></script>
        <script type="text/javascript" src="glUtils.js"></script>
        <script type="text/javascript" src="myxflow.js"></script>
        <script type="text/javascript" src="demo.js"></script>
    </div>
</div>

</body>
</html>
